# WWWとの統一
RewriteEngine on
RewriteCond %{HTTP_HOST} ^www\.sns-share\.com$ [NC]
RewriteRule ^(.*)$ https://sns-share.com/$1 [R=301,L]

# HTTPSへのリダイレクト
RewriteCond %{HTTPS} off
RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

# API リクエストをVercelにプロキシ
<IfModule mod_rewrite.c>
  RewriteEngine On
  
  # /api/contact へのリクエストを Vercel にプロキシ
  RewriteCond %{REQUEST_URI} ^/api/contact
  RewriteRule ^api/contact(.*)$ https://share-landing-xi.vercel.app/api/contact$1 [P,L]
  
  # プロキシヘッダーの設定
  <IfModule mod_headers.c>
    # プロキシ先のレスポンスヘッダーを保持
    Header unset Access-Control-Allow-Origin
    Header unset Access-Control-Allow-Methods
    Header unset Access-Control-Allow-Headers
    
    # プロキシされたリクエストに対して以下のヘッダーを設定
    <FilesMatch "^api/">
      Header always set Access-Control-Allow-Origin "*"
      Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS"
      Header always set Access-Control-Allow-Headers "Content-Type, Authorization"
      Header always set Access-Control-Allow-Credentials "true"
    </FilesMatch>
  </IfModule>
</IfModule>

# 末尾のスラッシュの統一
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_URI} !(.*)/$
RewriteRule ^(.*[^/])$ $1/ [L,R=301]

# 画像のMIMEタイプを設定
AddType image/jpeg .jpg .jpeg
AddType image/png .png
AddType image/gif .gif
AddType image/webp .webp
AddType image/svg+xml .svg

# キャッシュ設定
<IfModule mod_expires.c>
  ExpiresActive On
  ExpiresByType image/jpeg "access plus 1 year"
  ExpiresByType image/png "access plus 1 year"
  ExpiresByType image/gif "access plus 1 year"
  ExpiresByType image/webp "access plus 1 year"
  ExpiresByType image/svg+xml "access plus 1 year"
</IfModule>

# 404エラーページの設定
ErrorDocument 404 /404.html

# URLリライト（必要に応じて）
<IfModule mod_rewrite.c>
  RewriteEngine On
  RewriteBase /
  RewriteRule ^index\.html$ - [L]
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteRule . /index.html [L]
</IfModule>